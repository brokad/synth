#!/usr/bin/env bash

SYNTH_VERSION=${SYNTH_VERSION:-latest}
SYNTH_INSTALLER=https://github.com/brokad/synth/releases/$SYNTH_VERSION/download/install-nix

BUG_REPORT_URL="https://github.com/openquery-io/synth/issues/new?assignees=&labels=bug&template=bug_report.md&title="

oops() {
    log $@
    exit 1
}

log() {
    echo "$0:" "$@" >&2
}

check_util() {
    command -v "$1" > /dev/null 2>&1
}

ensure_nix() {
    if check_util "nix"; then
	log "found nix"
    else
	curl -L https://nixos.org/nix/install | sh
    fi
    . $HOME/.nix-profile/etc/profile.d/nix.sh
}

ensure_cachix() {
    if check_util "cachix"; then
	log "found cachix"
    else
	nix-env -iA cachix -f https://cachix.org/api/v1/install
    fi
    cachix use getsynth
}

ensure_utils() {
    check_util "curl"
    if [[ $? -ne 0 ]]; then
	oops "this installer needs curl to download synth"
    fi

    check_util "tar"
    if [[ $? -ne 0 ]]; then
	oops "this installer needs tar to extract synth"
    fi
}

ensure_synth() {
    if check_util "synth"; then
	log "synth is already installed, nothing to do"
	exit 0
    else
	ensure_nix
	ensure_cachix
	ensure_utils

	# Flow for `nix < 2.4`: Because `nix-env -f` does not seem to
	# support HTTP redirects and the default github artifact
	# release URL redirects to a one-time S3 URL.
	{
	    WORKDIR=$(mktemp -d)
	    pushd $WORKDIR
	    curl -Ls --output install-nix $SYNTH_INSTALLER
	    tar -xf install-nix
	    nix-env -iA synth -f default.nix
	    popd
	    rm -r $WORKDIR
	} || oops "could not install synth, sorry!\nPlease let us know what went wrong by opening an issue on GitHub: $BUG_REPORT_URL"

	if [[ ! -z "$CLOUDSHELL_ENVIRONMENT" ]]; then
	    # Assuming GCP Cloud Shell
	    log "seems to be running in a GCP Cloud Shell, symlinking 'synth' into your ~/.local/bin"
	    ln -s $HOME/.nix-profile/bin/synth $HOME/.local/bin/synth 2>&1 > /dev/null
	fi
    fi
}

ensure_synth
