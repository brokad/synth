(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{135:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/how_it_works-07d76054b510d2a2630e477ee9717fdc.png"},79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(92)),i={id:"how-it-works",title:"How It Works"},c={unversionedId:"how-it-works",id:"how-it-works",isDocsHomePage:!1,title:"How It Works",description:"Synth's funcionality can be broken into 3 main parts:",source:"@site/docs/how-it-works.md",slug:"/how-it-works",permalink:"/synth/how-it-works",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/how-it-works.md",version:"current",sidebar:"docsSidebar",previous:{title:"Synth CLI",permalink:"/synth/command-line"},next:{title:"Bank",permalink:"/synth/examples/bank"}},s=[],l={toc:s};function u(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Synth's funcionality can be broken into 3 main parts:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Inference Engine: The inference engine is the process by which Synth ingests a datasets and attempts to infer and build the Synth ",Object(o.b)("a",{parentName:"li",href:"/synth/schema"},"Schema")),Object(o.b)("li",{parentName:"ol"},"Schema (IR): The ",Object(o.b)("a",{parentName:"li",href:"/synth/schema"},"Schema")," intermediate representation is a compact state representing the range of data generation"),Object(o.b)("li",{parentName:"ol"},"Generator Network: Schemas are transpiled into a network of generators which actually generate the required data.")),Object(o.b)("p",null,"Below is a high-level diagram illustrating the process: "),Object(o.b)("p",null,Object(o.b)("img",{alt:"How it works",src:n(135).default})))}u.isMDXComponent=!0},92:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),f=r,m=p["".concat(i,".").concat(f)]||p[f]||b[f]||o;return n?a.a.createElement(m,c(c({ref:t},l),{},{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);